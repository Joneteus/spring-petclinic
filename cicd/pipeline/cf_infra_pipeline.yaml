AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: spring-petclinic
  GitHubOwner:
    Type: String
    Default: Joneteus
  GithubTokenSecretArn:
    Type: String
    Default: arn:aws:secretsmanager:eu-north-1:836922991352:secret:JoneteusGithubSecret-jDbXa2
  TerraformVersion:
    Type: String
    Default: "0.12.26"
  TerraformStateBucketName:
    Type: String
    Default: joneteus-terraform-state-bucket
  TerraformStateObjectKey:
    Type: String
    Default: aws-spring-petclinic/state
  TerraformStateLockDynamoDBTable:
    Type: String
    Default: "aws-spring-petclinic-lock"

Resources:
  CodePipelineArtifactStoreBucket:
    Type: AWS::S3::Bucket

  CodePipelineArtifactStoreAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: FullAccessToCodepipelineArtifactBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "*"
            Resource:
              - !Sub "arn:aws:s3:::${CodePipelineArtifactStoreBucket}"
              - !Sub "arn:aws:s3:::${CodePipelineArtifactStoreBucket}/*"

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CodePipelineArtifactStoreAccessPolicy
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
      Policies:
        - PolicyName: allow-access-to-terraform-state-bucket
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource: !Sub "arn:aws:s3:::${TerraformStateBucketName}"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: !Sub "arn:aws:s3:::${TerraformStateBucketName}/${TerraformStateObjectKey}"
        - PolicyName: allow-access-to-terraform-ddb-lock
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:GetItem"
                  - "dynamodb:PutItem"
                  - "dynamodb:DeleteItem"
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TerraformStateLockDynamoDBTable}

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref CodePipelineArtifactStoreAccessPolicy
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess

  SpringPetclinicTerraform:
    Type: AWS::CodeBuild::Project
    Properties:
      Source:
        Type: CODEPIPELINE
        BuildSpec: cicd/build/buildspec-terraform.yml
      TimeoutInMinutes: 15
      ServiceRole: !Ref CodeBuildServiceRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: TF_VERSION
            Value: !Ref TerraformVersion

  InfraPipelineWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Sub "{{resolve:secretsmanager:${GithubTokenSecretArn}:SecretString:token}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: "refs/heads/{Branch}"
      TargetPipeline: !Ref Pipeline
      TargetAction: SourceAction
      TargetPipelineVersion: !GetAtt Pipeline.Version
      RegisterWithThirdParty: true

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
      Stages:
        - Name: GithubSource
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Repo: !Ref RepositoryName
                Branch: !Ref BranchName
                Owner: !Ref GitHubOwner
                OAuthToken: !Sub "{{resolve:secretsmanager:${GithubTokenSecretArn}:SecretString:token}}"
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Terraform
          Actions:
            - Name: Terraforming
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref SpringPetclinicTerraform
